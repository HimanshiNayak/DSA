Question No : 1 
You have multiple arrays containing student grades for different subjects. You want to merge these arrays and calculate the average grade for each student. Write a function that takes these arrays as input and returns an array with the average grades.

Input format :
The first line of input contains the number of students (numStudents).

The second line of input contains the number of subjects (numSubjects).

The next numStudents lines contain numSubjects, space-separated grades for each student.

Output format :

The output displays the average grades for each student.

Each line of output contains the average grade for a student in the format "Student [student_number]: [average_grade]" with a round off one digit.




Refer to the sample output for formatting specifications.

Code constraints :

1 <= numStudents <= 100 (maximum number of students)

1 <= numSubjects <= 100 (maximum number of subjects)

The grades are real numbers.

Sample test cases :
Input 1 :
2
4
70 80 90 100
60 80 100 70
Output 1 :
Average grades:
Student 1: 85.0
Student 2: 77.5

Input 2 :
3
4
80 90 75 85
70 65 80 75
90 85 95 92
Output 2 :
Average grades:
Student 1: 82.5
Student 2: 72.5
Student 3: 90.5
///solution

#include <iostream>
#include <iomanip>
using namespace std;

void calculateAverage(float grades[][100], int numStudents, int numSubjects) {
    cout << "Average grades:" << endl;
    for(int i = 0; i < numStudents; ++i) {
        float sum = 0;
        for(int j = 0; j < numSubjects; ++j) {
            sum += grades[i][j];
        }
        float average = sum / numSubjects;
        cout << "Student " << (i + 1) << ": " << fixed << setprecision(1) << average << endl;
    }
}

int main() {
    int numStudents, numSubjects;
    cin >> numStudents >> numSubjects;
    
    float grades[100][100];
    for(int i = 0; i < numStudents; ++i) {
        for(int j = 0; j < numSubjects; ++j) {
            cin >> grades[i][j];
        }
    }
    
    calculateAverage(grades, numStudents, numSubjects);
    
    return 0;
}
