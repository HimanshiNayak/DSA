#include <bits/stdc++.h>
using namespace std;

// Search for an element
bool ispresent(int arr[][4], int target, int m,int n) { // Mention columns, otherwise won't be valid
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < 4; j++) {
            if (arr[i][j] == target) {
                return 1;
            }
        }
    }
    return 0;
}
void rowwisesum(int arr[][4], int m,int n){
    int sum=0;
    cout<<"Row wise sum: ";
      for (int i = 0; i < m; i++) {
        for (int j = 0; j < 4; j++) {
            sum += arr[i][j];
        }
        cout<<sum<<" ";
}
}
void colwisesum(int arr[][4], int m,int n){
    int sum=0;
    cout<<"column wise sum: ";
      for (int j = 0; j< 4; j++) {
        for (int i = 0; i < m; i++) {
            sum += arr[i][j];
        }
        cout<<sum<<" ";
}
}
void largestrowsum(int arr[][4], int m,int n){
      int sum=0 ,idx=-1;
      int maxi= INT_MIN;
   
      for (int i = 0; i < m; i++) {
        for (int j = 0; j < 4; j++) {
            sum += arr[i][j];
        }
       if(maxi<sum){
           maxi = sum;
           idx = i;
       }
     
}
  cout<<"largest sum: "<<maxi;
  cout<<"the max sum is at index: "<<idx;
}
int main() {
    int m;
    cin >> m;

    // Since column size must be fixed, ensuring it's 4 as per the ispresent function signature
    int a[m][4];
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < 4; j++) {
            cin >> a[i][j];
        }
    }
  int t;
    cin >> t;
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < 4; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }

    //to print colwise
     for (int j = 0; j < 4; j++) {
        for (int i = 0; i < m; i++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }

    if (ispresent(a, t, m,4)) {
        cout << "element found";
    } else {
        cout << "not found";
    }
rowwisesum(a,m,4);
colwisesum(a,m,4);
largestrowsum(a,m,4);
    return 0;
}
